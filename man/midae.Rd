% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/midae.R
\name{midae}
\alias{midae}
\title{Multiple imputation through denoising autoencoders with dropout}
\usage{
midae(
  data,
  m = 5,
  categorical.encoding = "onehot",
  device = "cpu",
  epochs = 100,
  batch.size = 512,
  subsample = 1,
  early.stopping.epochs = 1,
  dae.params = list(),
  pmm.type = NULL,
  pmm.k = 5,
  pmm.link = "prob",
  pmm.save.vars = NULL,
  loss.na.scale = FALSE,
  verbose = TRUE,
  print.every.n = 1,
  save.model = FALSE,
  path = NULL
)
}
\arguments{
\item{data}{A \code{data.frame}, \code{tibble} or \code{data.table} with missing values.}

\item{m}{The number of imputed datasets. Default: 5.}

\item{categorical.encoding}{The method for representing multi-class categorical features. Can be either \code{"embeddings"} or \code{"onehot"} (default).}

\item{device}{Device to use. Either \code{"cpu"} (default) or \code{"cuda"} for GPU.}

\item{epochs}{The number of training epochs (iterations). Default: 100.}

\item{batch.size}{The size of samples in each batch. Default: 512.}

\item{subsample}{The subsample ratio of training data. Default: 1.}

\item{early.stopping.epochs}{An integer value \code{k}. The training of midae will stop if the validation performance has not improved for \code{k} epochs, only used when \code{subsample} is less than 1. Default: 1.}

\item{dae.params}{A list of parameters for denoising autoencoders. See the documentation for the function \code{\link[=dae_default]{dae_default()}} for details.}

\item{pmm.type}{The type of predictive mean matching (PMM). Possible values:
\itemize{
\item \code{NULL} (default): Imputations without PMM;
\item \code{0}: Imputations with PMM type 0;
\item \code{1}: Imputations with PMM type 1;
\item \code{2}: Imputations with PMM type 2;
\item \code{"auto"}: Imputations with PMM type 2 for numeric/integer variables; imputations without PMM for categorical variables.
}}

\item{pmm.k}{The number of donors for predictive mean matching. Default: 5}

\item{pmm.link}{The link for predictive mean matching in binary variables:
\itemize{
\item \code{"prob"} (default): use probabilities;
\item \code{"logit"}: use logit values.
}}

\item{pmm.save.vars}{The names of variables whose predicted values of observed entries will be saved. Only use for PMM.}

\item{loss.na.scale}{Whether to multiply the ratio of missing values in  a feature to calculate the loss function. Default: \code{FALSE}.}

\item{verbose}{Whether or not to print training loss information. Default: \code{TRUE}.}

\item{print.every.n}{If \code{verbose} is set to \code{TRUE}, print out training loss for every n epochs. Default: 1.}

\item{save.model}{Whether or not to save the imputation model. Default: \code{FALSE}.}

\item{path}{The path where the final imputation model will be saved.}
}
\description{
This function is used to generate multiply-imputed datasets using denoising autoencoders with Monte-Carlo dropout, early stopping and predictive mean matching (PMM).
}
\examples{
withNA.df <- createNA(data = iris, p = 0.2)
imputed.data <- midae(
  data = withNA.df, m = 5, epochs = 5, batch.size = 32,
  path = file.path(tempdir(), "midaemodel.pt")
)
}
