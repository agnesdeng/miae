% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mivae.R
\name{mivae0}
\alias{mivae0}
\title{multiple imputation through variational autoencoders with dropout}
\usage{
mivae0(
  data,
  m = 5,
  epochs = 10,
  batch.size = 50,
  shuffle = TRUE,
  input.dropout = 0,
  hidden.dropout = 0,
  optimizer = "adamW",
  learning.rate = 0.001,
  weight.decay = 0.002,
  momentum = 0,
  encoder.structure = c(128, 64, 32),
  latent.dim = 4,
  decoder.structure = c(32, 64, 128),
  act = "elu",
  init.weight = "xavier.normal",
  scaler = "none",
  verbose = TRUE,
  print.every.n = 1,
  save.model = FALSE,
  path = NULL
)
}
\arguments{
\item{data}{A data frame, tibble or data table with missing values.}

\item{m}{The number of imputed datasets.}

\item{epochs}{The number of training epochs (iterations).}

\item{batch.size}{The size of samples in each batch.}

\item{shuffle}{Whether or not to shuffle training data. Default: TRUE}

\item{input.dropout}{The dropout probability of the input layer.}

\item{hidden.dropout}{The dropout probability of the hidden layers.}

\item{optimizer}{The name of the optimizer. Options are : "adam" (default), and "sgd".}

\item{learning.rate}{The learning rate. The default value is 0.001.}

\item{weight.decay}{Weight decay (L2 penalty). The default value is 0.}

\item{momentum}{Parameter for "sgd" optimizer. It is used for accelerating SGD in the relevant direction and dampens oscillations.}

\item{encoder.structure}{A vector indicating the structure of encoder. Default: c(128,64,32)}

\item{latent.dim}{The size of latent layer. The default value is 8.}

\item{decoder.structure}{A vector indicating the structure of decoder. Default: c(32,64,128)}

\item{act}{The name of activation function. Can be: "relu", "elu", "leaky.relu", "tanh", "sigmoid" and "identity".}

\item{init.weight}{Techniques for weights initialization. Can be "xavier.uniform" or "kaiming.uniform".}

\item{scaler}{The name of scaler for transforming numeric features. Can be "standard", "minmax" or "none".}

\item{verbose}{Whether or not to print training loss information. Default: TRUE.}

\item{print.every.n}{If verbose is set to TRUE, print out training loss for every n epochs.}

\item{save.model}{Whether or not to save the imputation model. Default: FALSE.}

\item{path}{The path where the final imputation model will be saved.}
}
\description{
multiple imputation through variational autoencoders with dropout
}
\examples{
withNA.df <- createNA(data = iris,p = 0.2)
imputed.data <- mivae(data = withNA.df, m = 5, epochs = 5, path = file.path(tempdir(),"mivaemodel.pt")
}
