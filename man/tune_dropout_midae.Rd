% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_dropout_midae.R
\name{tune_dropout_midae}
\alias{tune_dropout_midae}
\title{Tune dropout rate for midae}
\usage{
tune_dropout_midae(
  data,
  dropout.grid = list(input.dropout = c(0, 0.25, 0.5), hidden.dropout = c(0, 0.25, 0.5)),
  m = 5,
  categorical.encoding = "embeddings",
  device = "cpu",
  epochs = 5,
  batch.size = 32,
  subsample = 1,
  early.stopping.epochs = 1,
  pmm.params = list(),
  dae.params = list(),
  loss.na.scale = FALSE,
  verbose = TRUE,
  print.every.n = 1,
  save.model = FALSE,
  path = NULL
)
}
\arguments{
\item{data}{A dataset on which the midae model will be trained.}

\item{dropout.grid}{A list containing two vectors: \code{input.dropout} and
\code{hidden.dropout}, each specifying the dropout rates to be tested for
the input layer and hidden layers, respectively.}

\item{m}{The number of imputations to perform.}

\item{categorical.encoding}{The method used for encoding categorical
variables. Defaults to "embeddings".}

\item{device}{The computing device to use, either "cpu" or "cuda" for GPU.}

\item{epochs}{The number of training epochs for each model.}

\item{batch.size}{The size of the batches used in training.}

\item{subsample}{The proportion of the data to be used in training.
Defaults to 1, meaning the full dataset is used.}

\item{early.stopping.epochs}{The number of epochs with no improvement
after which training will be stopped.}

\item{pmm.params}{A list of parameters for predictive mean matching.}

\item{dae.params}{A list of parameters for the denoising autoencoder.}

\item{loss.na.scale}{Boolean flag indicating whether to scale the loss
function based on NA values. Defaults to FALSE.}

\item{verbose}{Boolean flag to control the verbosity of the function's output.}

\item{print.every.n}{Specifies how often (in epochs) to print the training
progress. Only relevant if verbose is TRUE.}

\item{save.model}{Boolean flag indicating whether to save the trained model.}

\item{path}{File path where the model should be saved if save.model is TRUE.
If NULL and save.model is TRUE, the model is saved in the current directory.}
}
\value{
A list containing the tuned parameters and their corresponding
performance metrics.
}
\description{
Tune dropout rate for midae
}
\examples{
1+1
}
